from youtube_transcript_api import YouTubeTranscriptApi
import math
import os
import sys
import urllib.parse
from pathlib import Path

SCRIPT_DIR = Path(__file__).parent.resolve()
PROJECT_ROOT = SCRIPT_DIR.parent

def float_to_str_time(t: float) -> str:
    """ 
    Transforms time into a string 
    """
    seconds = int(math.floor(t))

    hours = seconds // 3600
    minutes = (seconds % 3600) // 60
    secs = seconds % 60

    return f"{hours:02d}:{minutes:02d}:{secs:02d}"

def save_subtitles(transcript, output_path: str):
    """
    Saves subtitles as srt file
    """

    with open(output_path, 'w', encoding='utf-8') as f:
        for index, entry in enumerate(transcript, start=1):
            start_time = float_to_str_time(entry['start'])
            end_time = float_to_str_time(entry['start'] + entry['duration'])
            start_seconds = int(math.floor(entry['start']))
            text = entry['text'].replace('\n', ' ').strip()

            f.write(f"{index}\n")
            f.write(f"{start_time} --> {end_time} ({start_seconds})\n")
            f.write(f"{text}\n\n")

def extract_video_id(url: str) -> str:
    """
    Extract the 'v=' parameter from a YouTube watch URL.
    e.g. https://www.youtube.com/watch?v=abcd1234 => abcd1234
    
    Returns None if not found.
    """
    parsed_url = urllib.parse.urlparse(url)
    query_params = urllib.parse.parse_qs(parsed_url.query)

    if 'v' in query_params and len(query_params['v']) > 0:
        return query_params['v'][0]
    else:
        return None

def main(video_id:str):
#    video_url = 'https://www.youtube.com/watch?v=QPM0WNqwJBc'
    try:
        transcript_list = YouTubeTranscriptApi.list_transcripts(video_id)
        transcript = transcript_list.find_transcript(['en', 'es', 'ru', 'de', 'fr']).fetch()

    except Exception as e:
        print("Couldn't find autogenerated subs:", e)
        return

    output_folder = PROJECT_ROOT / "subtitles"
    if not os.path.exists(output_folder):
        os.makedirs(output_folder)


    output_file = os.path.join(output_folder, f"{video_id}.srt")

    save_subtitles(transcript, output_file)
    print(f"Subtitles succesfully saved into the file: {output_file}")

if __name__ == "__main__":
    if len(sys.argv) > 1:
        video_id_argv = sys.argv[1]
    else:
        video_id_argv = input("Enter the YouTube video id").strip()

    main(video_id_argv)